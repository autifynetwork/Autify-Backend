generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Brand {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  whitelist Boolean  @default(false)
  vendors   Vendor[] @relation("VendorBrand")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Vendor {
  id               String           @id @default(cuid())
  vendorName       String
  vendorPhone      String           @unique
  contract         String?
  vendorEntityName String?
  vendorTaxDetails String?
  AdditionalInfo   String?
  userName         String           @unique
  password         String
  brand            Brand            @relation("VendorBrand", fields: [brandId], references: [id])
  brandId          String           @unique
  billOfMat        BillofMaterial[]
  whiteList        Boolean?         @default(false)
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @updatedAt
}

model Category {
  id            String             @id @default(cuid())
  categoryName  String
  subCategories SubCategory[]
  attributes    ProductAttribute[]
  SKUs          ProductSKU[]
  status        Boolean            @default(true)
  createdAt     DateTime           @default(now())
  updatedAt     DateTime           @updatedAt
}

model SubCategory {
  id              String   @id @default(cuid())
  subCategoryName String
  mainCategory    Category @relation(fields: [categoryId], references: [id])
  categoryId      String   @unique
  status          Boolean  @default(true)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model ProductList {
  id             String   @id @default(cuid())
  productName    String
  status         Boolean  @default(true)
  unit           Int
  productDesc    String?
  expiryDate     String?
  materialUsed   String?
  location       String?
  manfactDetail  String?
  attributes     String?
  sku            String?
  specialFeature String?
  cartificate    String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model ProductAttribute {
  id                  String   @id @default(cuid())
  attributeName       String
  status              Boolean  @default(true)
  attributeCategory   Category @relation(fields: [attributeCategoryId], references: [id])
  attributeCategoryId String   @unique
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
}

model ProductSKU {
  id            String   @id @default(cuid())
  productsku    String
  status        Boolean  @default(true)
  SKUCategory   Category @relation(fields: [SKUCategoryId], references: [id])
  SKUCategoryId String   @unique
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Profile {
  id        String   @id @default(cuid())
  firstName String
  lastName  String
  email     String   @unique
  phone     String?
  bName     String?
  bEmail    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ReadPermission {
  id               String   @id @default(cuid())
  categorySetup    Boolean?
  categories       Boolean?
  subCategories    Boolean?
  productSetup     Boolean?
  productList      Boolean?
  productAttribute Boolean?
  productSKU       Boolean?
  userManagement   Boolean?
  vendorSetup      Boolean?
  vendorRoles      Boolean?
  orderManagement  Boolean?
  role             Role[]
}

model WritePermission {
  id               String   @id @default(cuid())
  categorySetup    Boolean?
  categories       Boolean?
  subCategories    Boolean?
  productSetup     Boolean?
  productList      Boolean?
  productAttribute Boolean?
  productSKU       Boolean?
  userManagement   Boolean?
  vendorSetup      Boolean?
  vendorRoles      Boolean?
  orderManagement  Boolean?
  role             Role[]
}

model StatusPermission {
  id               String   @id @default(cuid())
  categorySetup    Boolean?
  categories       Boolean?
  subCategories    Boolean?
  productSetup     Boolean?
  productList      Boolean?
  productAttribute Boolean?
  productSKU       Boolean?
  userManagement   Boolean?
  vendorSetup      Boolean?
  vendorRoles      Boolean?
  orderManagement  Boolean?
  role             Role[]
}

model Role {
  id                 String            @id @default(cuid())
  roleName           String
  readPermission     ReadPermission?   @relation(fields: [readPermissionId], references: [id])
  readPermissionId   String?           @unique
  writePermission    WritePermission?  @relation(fields: [writePermissionId], references: [id])
  writePermissionId  String?           @unique
  statusPermission   StatusPermission? @relation(fields: [statusPermissionId], references: [id])
  statusPermissionId String?           @unique
  createdAt          DateTime          @default(now())
  updatedAt          DateTime          @updatedAt
}

model BillofMaterial {
  id           String    @id @default(cuid())
  title        String
  description  String?
  vendor       Vendor    @relation(fields: [vendorId], references: [id])
  vendorId     String    @unique
  dueDate      DateTime?
  instructions String?
  remarks      String?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}
